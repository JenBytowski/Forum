// <auto-generated />
using System;
using ForumAPI.Services.BoardService.BoardDataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ForumAPI.Services.BoardService.BoardDataContext.Migrations
{
    [DbContext(typeof(BoardContext))]
    [Migration("20210204101303_add_alias_to_board")]
    partial class add_alias_to_board
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ForumAPI.Services.BoardService.BoardDataContext.AdditionalPostInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContentURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("AdditionalPostInfos");
                });

            modelBuilder.Entity("ForumAPI.Services.BoardService.BoardDataContext.Board", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("ForumAPI.Services.BoardService.BoardDataContext.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PosterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TopicId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("ForumAPI.Services.BoardService.BoardDataContext.Topic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreaterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TopicHeader")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("ForumAPI.Services.BoardService.BoardDataContext.AdditionalPostInfo", b =>
                {
                    b.HasOne("ForumAPI.Services.BoardService.BoardDataContext.Post", "Post")
                        .WithMany("AdditionalPostInfos")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("ForumAPI.Services.BoardService.BoardDataContext.Post", b =>
                {
                    b.HasOne("ForumAPI.Services.BoardService.BoardDataContext.Topic", "Topic")
                        .WithMany("Posts")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("ForumAPI.Services.BoardService.BoardDataContext.Topic", b =>
                {
                    b.HasOne("ForumAPI.Services.BoardService.BoardDataContext.Board", "Board")
                        .WithMany("Topics")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");
                });

            modelBuilder.Entity("ForumAPI.Services.BoardService.BoardDataContext.Board", b =>
                {
                    b.Navigation("Topics");
                });

            modelBuilder.Entity("ForumAPI.Services.BoardService.BoardDataContext.Post", b =>
                {
                    b.Navigation("AdditionalPostInfos");
                });

            modelBuilder.Entity("ForumAPI.Services.BoardService.BoardDataContext.Topic", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
